<%
#
# renders the errors for the most recent test execution for the given task.
#
# must specify local variable "execution"
#
%>

<% if execution.incomplete? || (execution.sibling_execution && execution.sibling_execution.incomplete?) %>
  <h4><i class="fa fa-fw fa-refresh fa-spin text-info"></i>In Progress</h4>
  <p>You do not need to reload your browser. Results will automatically display when the tests are done running.</p>
  <% # ajax contacts test_execution's show controller action with format: 'js'. controller then directs to show.js.erb which will wait, then re-render %>
  <script>
    $.ajax({url: "<%= request.env['PATH_INFO'] %>", type: "GET", dataType: 'script', data: { partial: 'execution_results' }});
  </script>


<% elsif execution.passing? %>
  <h4><i class="fa fa-fw fa-check-circle text-success"></i> Passed</h4>
  <% if execution.task.product_test.product.c3_test && execution.task.product_test._type == 'MeasureTest' %>
    <% submit_warnings = execution.sibling_execution.only_warnings %>
    <%= render partial: 'test_executions/results/error_table', locals: { errors: submit_warnings, displaying_cat1: displaying_cat1?(execution.task), message_title: 'Warning' } if submit_warnings.any? %>
  <% end %>

<% else %>
  <% qrda_errors = execution.qrda_errors %>
  <% report_errors = execution.reporting_errors %>
  <% should_display_c3 = execution.task.product_test.product.c3_test && execution.task.product_test._type == 'MeasureTest' %>
  <% submit_errors = should_display_c3 ? execution.sibling_execution.only_errors : [] %>
  <% submit_warnings = should_display_c3 ? execution.sibling_execution.only_warnings : [] %>

  <% failure_message = " Failed with #{qrda_errors.count + report_errors.count + submit_errors.count} errors" %>
  <% failure_message += " and #{submit_warnings.count} warnings" if submit_warnings.any? %>
  <h4><i class="fa fa-fw fa-times-circle text-danger"></i><%= failure_message %></h4>
  <ul class = 'nav nav-tabs'>
    <li class = 'active'>
      <a data-toggle = 'tab' class = 'tab' href = <%= "#QRDA_tab_execution_#{execution.id}" %>>
        <%= "QRDA Errors (#{qrda_errors.count})" %>
      </a>
    </li>
    <li>
      <a data-toggle = 'tab' class = 'tab' href = <%= "#reporting_tab_execution_#{execution.id}" %>>
        <%= "Reporting Errors (#{report_errors.count})" %>
      </a>
    </li>
    <% if should_display_c3 %>
      <li>
        <a data-toggle = 'tab' class = 'tab' href = <%= "#submission_tab_execution_#{execution.id}" %>>
          <%= "Submission Errors (#{submit_errors.count})" %>
        </a>
      </li>
      <li>
        <a data-toggle = 'tab' class = 'tab' href = <%= "#submission_warnings_tab_execution_#{execution.id}" %>>
          <%= "Submission Warnings (#{submit_warnings.count})" %>
        </a>
      </li>
    <% end %>
  </ul>

  <% displaying_cat1 = displaying_cat1?(execution.task) %>

  <div class = 'tab-content'>
    <div class = 'tab-pane active' id = <%= "QRDA_tab_execution_#{execution.id}" %>>
      <%= render partial: 'test_executions/results/error_table', locals: { errors: qrda_errors, displaying_cat1: displaying_cat1, message_title: 'Error' } %>
    </div>
    <div class = 'tab-pane' id = <%= "reporting_tab_execution_#{execution.id}" %>>
      <%= render partial: 'test_executions/results/error_table', locals: { errors: report_errors, displaying_cat1: displaying_cat1, message_title: 'Error' } %>
    </div>
    <% if should_display_c3 %>
      <div class = 'tab-pane' id = <%= "submission_tab_execution_#{execution.id}" %>>
        <%= render partial: 'test_executions/results/error_table', locals: { errors: submit_errors, displaying_cat1: displaying_cat1, message_title: 'Error' } if submit_errors.any? %>
      </div>
      <div class = 'tab-pane' id = <%= "submission_warnings_tab_execution_#{execution.id}" %>>
        <%= render partial: 'test_executions/results/error_table', locals: { errors: submit_warnings, displaying_cat1: displaying_cat1, message_title: 'Warning' } if submit_warnings.any? %>
      </div>
    <% end %>
  </div>

  <% # XML Viewer %>
  <div>
    <% error_maps = get_error_mapping(execution) %>
    <div id = 'xml_frame' class = 'xml-frame'>
      <%= render partial: "test_executions/results/xmlnav"%>
      <h3>Uploaded XML</h3>
      <% error_maps.each do |error_map| %>
        <h4><%= File.basename(error_map[:file]).force_encoding('UTF-8') %></h4>
        <%= render partial: 'test_executions/results/node', :locals => { doc: error_map[:doc], error_map: error_map[:error_map], error_attributes: error_map[:error_attributes], execution_errors: error_map[:file_errors] } %>
      <% end %>
    </div>
  </div>
<% end %>
